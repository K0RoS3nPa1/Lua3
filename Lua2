do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16,...)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==2) then v21=function()local v38=v1(v15,v18,v18);v18=v18 + 1;return v38;end;v22=nil;v22=function()local v39,v40=v1(v15,v18,v18 + (3 -1));v18=v18 + (7 -5);return (v40 * (180 + 76)) + v39;end;v17=3;end if (v17==6) then v28=nil;v28=function()local v41=0;local v42;local v43;local v44;local v45;local v46;local v47;local v48;local v49;local v50;while true do if ((7 -4)~=v41) then else v48=nil;v49=nil;v41=4;end if ((0 -0)==v41) then v42=251 -(119 + 132);v43=nil;v41=1 + 0;end if (v41==1) then v44=nil;v45=nil;v41=2;end if (v41==(1606 -(343 + 1259))) then v50=nil;while true do if ((6 -3)==v42) then local v79=0 -0;while true do if (v79==1) then v42=925 -(147 + 774);break;end if (v79==0) then v49=nil;v50=nil;v79=1;end end end if (v42==4) then while true do if (v43~=2) then else local v99=0;local v100;while true do if (v99==0) then v100=0;while true do if (v100==(1 -0)) then v43=3;break;end if (v100==0) then local v112=0;while true do if (v112==(0 -0)) then v48=nil;v49=nil;v112=1;end if (v112==1) then v100=2 -1;break;end end end end break;end end end if (v43~=(646 -(148 + 498))) then else local v101=1527 -(203 + 1324);local v102;while true do if (v101~=0) then else v102=0 + 0;while true do if ((1 + 0)==v102) then v43=1 + 0;break;end if (v102~=0) then else local v113=0;while true do if (v113==(0 + 0)) then v44=0 + 0;v45=nil;v113=1;end if (v113==1) then v102=1;break;end end end end break;end end end if (v43==3) then v50=nil;while true do local v105=0;local v106;while true do if (v105==(0 -0)) then v106=613 -(195 + 418);while true do if (v106~=1) then else if (v44==(1 + 2)) then local v119=0;local v120;while true do if ((460 -(90 + 370))==v119) then v120=375 -(227 + 148);while true do local v123=0;while true do if ((0 + 0)==v123) then if (v120~=1) then else return v48;end if (v120==0) then local v251=0;while true do if (v251==(0 -0)) then for v292=456 -(84 + 371),v23() do v46[v292-1]=v28();end for v294=1 -0,v23() do v47[v294]=v23();end v251=1403 -(785 + 617);end if (v251==(1 -0)) then v120=1;break;end end end break;end end end break;end end end if (v44~=1) then else local v121=1312 -(250 + 1062);local v122;while true do if (v121==(684 -(4 + 680))) then v122=0;while true do if (v122==1) then v50={};v44=2;break;end if (v122~=(0 -0)) then else local v125=0;while true do if (v125~=1) then else v122=142 -(139 + 2);break;end if (v125==(0 + 0)) then v48={v45,v46,nil,v47};v49=v23();v125=1 + 0;end end end end break;end end end break;end if (v106==0) then local v115=0 -0;local v116;while true do if (v115==(0 + 0)) then v116=0 -0;while true do if (v116~=(1 -0)) then else v106=1 + 0;break;end if (v116==(196 -(92 + 104))) then local v124=1837 -(763 + 1074);while true do if (v124~=(0 -0)) then else if (v44~=(0 -0)) then else local v252=0 -0;local v253;while true do if (v252~=0) then else v253=16 -(8 + 8);while true do if (v253~=1) then else v47={};v44=1;break;end if (v253~=(0 -0)) then else local v325=0 -0;local v326;while true do if (v325==0) then v326=1806 -(1052 + 754);while true do if (v326~=0) then else local v401=0 -0;while true do if (v401==0) then v45={};v46={};v401=757 -(165 + 591);end if (v401==(3 -2)) then v326=2 -1;break;end end end if (v326==1) then v253=604 -(572 + 31);break;end end break;end end end end break;end end end if (v44~=2) then else local v254=0;local v255;local v256;while true do if (v254==1) then while true do if ((0 + 0)~=v255) then else v256=0 + 0;while true do if (v256==1) then for v384=1 + 0,v23() do local v385=0 + 0;local v386;local v387;local v388;while true do if (v385~=1) then else v388=nil;while true do if ((343 -(98 + 244))==v386) then while true do if (v387~=(0 -0)) then else v388=v21();if (v20(v388,1 + 0,1 + 0)==0) then local v446=0 -0;local v447;local v448;local v449;local v450;while true do if (v446~=2) then else while true do if (v447~=(1551 -(877 + 671))) then else if (v20(v449,3,3)~=(1332 -(1130 + 201))) then else v450[19 -15]=v50[v450[952 -(534 + 414)]];end v45[v384]=v450;break;end if (v447~=(0 + 0)) then else local v454=0;local v455;while true do if (v454==0) then v455=0;while true do if ((257 -(63 + 194))~=v455) then else local v471=0 + 0;while true do if ((1346 -(701 + 645))==v471) then v448=v20(v388,1046 -(1002 + 42),3);v449=v20(v388,6 -2,6);v471=2 -1;end if (v471==1) then v455=2 -1;break;end end end if (1==v455) then v447=1;break;end end break;end end end if (1~=v447) then else local v456=491 -(283 + 208);while true do if (v456==0) then local v466=0;while true do if (v466==(1 -0)) then v456=3 -2;break;end if (v466==(0 -0)) then v450={v22(),v22(),nil,nil};if (v448==(0 + 0)) then local v472=1436 -(874 + 562);while true do if (0~=v472) then else v450[3]=v22();v450[8 -4]=v22();break;end end elseif (v448==(1 + 0)) then v450[3]=v23();elseif (v448==2) then v450[843 -(208 + 632)]=v23() -((3 -1)^(5 + 11));elseif (v448==(2 + 1)) then local v477=0 -0;local v478;while true do if (v477==0) then v478=0 -0;while true do if (v478==0) then v450[3 + 0]=v23() -((9 -7)^(4 + 12));v450[4]=v22();break;end end break;end end end v466=1921 -(975 + 945);end end end if (v456==1) then v447=2;break;end end end if (v447==(1011 -(955 + 54))) then local v457=0;while true do if (v457~=0) then else if (v20(v449,1 -0,1)~=1) then else v450[2]=v50[v450[3 -1]];end if (v20(v449,1423 -(27 + 1394),5 -3)==1) then v450[3]=v50[v450[8 -5]];end v457=1575 -(1506 + 68);end if (v457==(1 + 0)) then v447=3;break;end end end end break;end if (v446==(0 -0)) then v447=69 -(42 + 27);v448=nil;v446=1;end if ((889 -(235 + 653))==v446) then v449=nil;v450=nil;v446=2;end end end break;end end break;end if (v386==(0 + 0)) then v387=0 + 0;v388=nil;v386=1 -0;end end break;end if (v385==(0 + 0)) then v386=0 + 0;v387=nil;v385=1;end end end v44=3;break;end if ((0 -0)==v256) then local v366=0 -0;local v367;while true do if (v366==(0 + 0)) then v367=0 + 0;while true do if (v367~=(0 + 0)) then else local v421=1346 -(391 + 955);while true do if (v421==(1930 -(1735 + 194))) then v367=1 + 0;break;end if (v421==0) then for v436=1 + 0,v49 do local v437=0;local v438;local v439;local v440;local v441;while true do if (v437==0) then v438=0 + 0;v439=nil;v437=2 -1;end if (v437==2) then while true do if (v438==(1 + 0)) then v441=nil;while true do if (v439==(0 + 0)) then local v458=0 -0;local v459;while true do if (v458==0) then v459=0;while true do if (v459==0) then v440=v21();v441=nil;v459=1;end if (v459==(1 + 0)) then v439=1;break;end end break;end end end if (v439==1) then if (v440==(2 -1)) then v441=v21()~=(0 + 0);elseif (v440==(2 -0)) then v441=v24();elseif (v440==3) then v441=v25();end v50[v436]=v441;break;end end break;end if (v438~=(470 -(291 + 179))) then else local v452=0 -0;while true do if (v452~=1) then else v438=1 + 0;break;end if ((214 -(45 + 169))~=v452) then else v439=0 -0;v440=nil;v452=1;end end end end break;end if (v437~=1) then else v440=nil;v441=nil;v437=2 -0;end end end v48[3]=v21();v421=1 + 0;end end end if (v367==1) then v256=1 + 0;break;end end break;end end end end break;end end break;end if (v254==(1429 -(872 + 557))) then v255=0;v256=nil;v254=1 + 0;end end end v124=1;end if (v124==(4 -3)) then v116=1;break;end end end end break;end end end end break;end end end break;end if (v43==1) then local v103=520 -(251 + 269);local v104;while true do if (v103~=0) then else v104=0;while true do if (v104==1) then v43=2;break;end if (v104~=0) then else local v114=0 -0;while true do if (v114~=(1636 -(1039 + 596))) then else v104=1;break;end if (0~=v114) then else v46=nil;v47=nil;v114=2 -1;end end end end break;end end end end break;end if (v42==(1131 -(790 + 339))) then local v80=0 + 0;while true do if (v80==1) then v42=3;break;end if (v80==0) then v47=nil;v48=nil;v80=1;end end end if (v42==0) then local v81=0 + 0;while true do if (v81~=1) then else v42=1;break;end if (v81==(0 + 0)) then v43=0 + 0;v44=nil;v81=1;end end end if (v42==(1172 -(334 + 837))) then local v82=390 -(214 + 176);while true do if ((1913 -(1566 + 347))~=v82) then else v45=nil;v46=nil;v82=4 -3;end if (v82~=(1 + 0)) then else v42=1481 -(620 + 859);break;end end end end break;end if (v41~=(344 -(297 + 45))) then else v46=nil;v47=nil;v41=3;end end end;v29=nil;v17=7;end if (4==v17) then v24=function()local v51=v23();local v52=v23();return (( -(1546 -(632 + 498 + 414)) * v20(v52,32)) + ((1973 -(1464 + 508)) -0)) * (2^(v20(v52,21,1036 -(161 + 844)) -(2326 -(708 + 595)))) * ((((v20(v52,1754 -(1156 + 597),10 + 10) * ((2 + (805 -(314 + 491)))^(102 -(20 + 50)))) + v51)/((2 + 0)^52)) + 1 + 0);end;v25=nil;v25=function(v30)local v53=0 + 0;local v54;local v55;while true do if (v53==(1925 -(1345 + 577))) then return v6(v55);end if (v53==((1 -0) + 1)) then v55={};for v76=33 -(20 + 12), #v54 do v55[v76]=v2(v1(v3(v54,v76,v76)));end v53=3;end if (v53==(1 + 0 + 0)) then v54=v3(v15,v18,(v18 + v30) -(1 + 0));v18=v18 + v30;v53=1953 -(397 + 133 + 1421);end if (v53==0) then v54=nil;if  not v30 then local v78=1131 -(858 + 273);while true do if (v78==(0 + 0)) then v30=v23();if (v30==(0 + 0)) then return "";end break;end end end v53=1 + 0;end end end;v17=5;end if (0==v17) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v31)if (v1(v31,2)==79) then local v64=0;while true do if (v64==0) then v19=v0(v3(v31,1,1));return "";end end else local v65=0;local v66;while true do if (v65==0) then v66=v2(v0(v31,16));if v19 then local v83=v5(v66,v19);v19=nil;return v83;else return v66;end break;end end end end);v17=1;end if (v17==3) then v23=nil;v23=function()local v56=(0 + 0) -0;local v57;local v58;local v59;local v60;while true do if (v56==(1392 -(687 + (1557 -(178 + 674))))) then v57,v58,v59,v60=v1(v15,v18,v18 + 2 + 1);v18=v18 + 3 + 1;v56=923 -(234 + 31 + 657);end if (v56==(4 -3)) then return (v60 * 16777216) + (v59 * (181329 -115793)) + (v58 * (170 + 86)) + v57;end end end;v24=nil;v17=4;end if (v17==7) then v29=function(v32,v33,v34)local v61=v32[1];local v62=v32[2];local v63=v32[3];return function(...)local v67=0;local v68;local v69;local v70;local v71;local v72;while true do if (v67==1) then v70={...};v71=v11("#",...) -1;v67=2;end if (v67==3) then A,B=v27(v10(v72));if  not A[1] then local v84=0;local v85;while true do if (v84==0) then v85=v32[4][v68] or "?";error("Script error at ["   .. v85   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end break;end if (0==v67) then v68=1;v69= -1;v67=1;end if (v67==2) then v72=nil;v72=function()local v86=v61;local v87=v62;local v88=v63;local v89=v27;local v90={};local v91={};local v92={};for v96=0,v71 do if (((2724 -(5987 -3948))==685) and (v96>=v88)) then v90[v96-v88]=v70[v96 + (1835 -(881 + 953))];else v92[v96]=v70[v96 + (287 -((606 -418) + 98))];end end local v93=(v71-v88) + 1 + 0;local v94;local v95;while true do local v97=1134 -(912 + 222);local v98;while true do if (((750 + 1930)>(4074 -((1662 -788) + 730))) and (v97==(460 -(18 + 265 + 177)))) then v98=321 -(294 + 27);while true do if (((595 + 605)==(162 + 1038)) and (v98==(1 + 0))) then if ((v95<=((2225 -1588) -(494 + 121))) or ((5779 -((1776 -(359 + 918)) + 327))<(3317 -(764 + 897)))) then if (((8071 -3240)>=1149) and (v95<=10)) then if ((v95<=(11 -7)) or ((4 + 15)>(881 -420))) then if (((4544 -(2135 -684))==(4675 -(1326 + 256))) and (v95<=(1281 -((1778 -1024) + 526)))) then if ((v95==(0 -0)) or (((6760 -(865 + 615)) -3048)>=(6325 -(664 + (1480 -(111 + 339)))))) then local v126=0 + 0;local v127;local v128;while true do if ((v126==(926 -(754 + 171))) or (509==(2963 -(59 + 29)))) then while true do if (((1825 -(830 + 995))==v127) or ((104 + 4371)<((3129 -(270 + 491)) + 1971))) then local v271=296 -(225 + 71);local v272;while true do if ((3956>=(9165 -5326)) and (v271==0)) then v272=0;while true do if (((1334 + 556)>=1472) and (v272==(1135 -(638 + 496)))) then v127=1 + 0;break;end if (((118 + 2388)<=(4426 -(675 + 105))) and (v272==(0 -0))) then local v368=0;while true do if (((1 + 0)==v368) or ((1632 -(948 + 38))==2346)) then v272=1;break;end if ((v368==(0 + (228 -(25 + 203)))) or ((386 + 3595)>4830)) then v128=v94[(1692 -(1653 + 38)) + 1];v69=(v128 + v93) -(3 -(1093 -(30 + 1061)));v368=1;end end end end break;end end end if (((3019 -988)==(2299 -(40 + (1829 -(617 + 984))))) and (v127==(1 + 0))) then for v296=v128,v69 do local v297=0;local v298;while true do if (((212 + 2931)<(5819 -2359)) and (v297==(0 + 0))) then v298=v90[v296-v128];v92[v296]=v298;break;end end end break;end end break;end if ((286<=(5361 -(683 + 55))) and (v126==0)) then local v257=0 + 0;while true do if ((v257==(986 -(171 + 815))) or ((5022 -(15 + (520 -216)))<(431 -244))) then v127=0 + 0;v128=nil;v257=4 -3;end if (((1598 -720)<=944) and (v257==1)) then v126=(7 -4) -2;break;end end end end elseif ((v92[v94[5 -3]]==v92[v94[6 -2]]) or ((1784 -(170 + 732))<(1626 -(812 + 236)))) then v68=v68 + 1 + 0;else v68=v94[(3703 -2009) -(357 + 1334)];end elseif (((974 -(688 + 3))<=((358 + 977) -(63 + 75 + 12))) and (v95<=((48 + 187) -(37 + 196)))) then v92[v94[1633 -(87 + 1544)]][v94[3]]=v92[v94[1646 -(272 + 1370)]];elseif ((v95==(2 + 1)) or ((4849 -(448 + 322))==(1990 -1098))) then if ((v94[327 -(228 + 67 + 30)]==v92[v94[4]]) or ((2827 + 1703)<=(1635 -(227 + 410)))) then v68=v68 + 1 + 0;else v68=v94[3 + 0];end else local v169=1498 -(429 + 1069);local v170;local v171;while true do if (((3969 + 827)>=(2003 + 299)) and (v169==((1797 -(96 + 204)) -(1383 + (923 -(328 + 482)))))) then while true do if ((v170==(0 -0)) or (((6546 -(424 + 328)) -(335 + 1173))==(5903 -(4139 + 287)))) then v171=v94[2];v92[v171]=v92[v171](v92[v171 + 1]);break;end end break;end if (((2270 + 1642)<(17171 -12462)) and (v169==(0 -0))) then v170=0 -0;v171=nil;v169=1;end end end elseif ((v95<=(1631 -(285 + 1339))) or (4617<=(4853 -(641 + 129)))) then if ((v95<=(1470 -(509 + 956))) or ((20 + 142)>628)) then if ((v92[v94[2]]==v94[2 + 2]) or ((4877 -((607 -177) + 993))==(5382 -(580 + 491)))) then v68=v68 + 1;else v68=v94[670 -(504 + 163)];end elseif (((5254 -(1234 + 59))>=(199 + 992)) and (v95==6)) then v34[v94[817 -(71 + 743)]]=v92[v94[524 -(517 + 5)]];else local v175=0 -0;local v176;local v177;while true do if (((9318 -(195 + 5084))>((4559 -(614 + 472)) -(617 + 217))) and (1==v175)) then while true do if ((v176==(1314 -(153 + 606 + 555))) or ((1353 + 699)>(3138 -(167 + 249)))) then v177=v94[454 -(181 + 271)];v92[v177](v12(v92,v177 + (1 -0),v94[2 + (1 -0)]));break;end end break;end if (((5080 -(449 + 748))>(6346 -4881)) and (v175==(352 -(135 + 217)))) then v176=0 + 0 + 0;v177=nil;v175=70 -(47 + 22);end end end elseif (((8721 -6294)>(2667 -(1335 + 588))) and (v95<=(6 + (1182 -(910 + 270))))) then if ( not v92[v94[2]] or ((267 + 623)>=(6678 -4941))) then v68=v68 + (4 -3);else v68=v94[447 -(302 + (220 -78))];end elseif (((677 + 2975)<=4750) and (v95==(53 -(20 + 24)))) then v92[v94[2]]= not v92[v94[3]];else local v180=0 + 0;local v181;local v182;local v183;local v184;local v185;while true do if (((508 + 2692)==(2266 + 934)) and (v180==(739 -(681 + 57)))) then v183=nil;v184=nil;v180=2 -0;end if (((4747 -(66 + 471))<=4276) and (v180==(0 + 0))) then v181=0 + 0;v182=nil;v180=1;end if (((2 + 0 + 0)==v180) or ((8273 -4660)<(14134 -10943))) then v185=nil;while true do if ((v181==((98 -(4 + 94)) -0)) or ((2368 + 2265)<(5150 -2931))) then local v311=1264 -(1006 + (889 -631));while true do if (((2706 -1368)==(4594 -3256)) and (v311==((0 -0) -0))) then v182=0;v183=nil;v311=(1 + 0) -0;end if ((v311==1) or ((3602 -(162 + 188))<(3190 -(922 + 623)))) then v181=3 -2;break;end end end if (((2979 + 1982)==(7097 -2136)) and (1==v181)) then local v312=0 -0;while true do if (((250 -(115 + 135))==v312) or ((4260 -(1579 + 346))==(5224 -1278))) then v184=nil;v185=nil;v312=2 -(1 -0);end if ((v312==(397 -(6 + 390))) or ((453 + 1184)>(2478 -(332 + 395)))) then v181=2 + 0 + 0;break;end end end if ((v181==(2 + 0)) or ((1693 -(781 + 503))==(2869 -(243 + 774)))) then while true do if ((v182==0) or ((1068 -(144 + 591))>(5587 -(1115 + 547)))) then local v352=0;while true do if ((v352==(1 + 0)) or ((4997 -(655 + 1204))>(17639 -14045))) then v182=1 + 0;break;end if (((1619 -((1570 -1117) + 717))<=4736) and (v352==((864 + 90) -(889 + 65)))) then v183=v94[2];v184={v92[v183](v92[v183 + (1966 -(1963 + 2))])};v352=(125 -(24 + 100)) + 0;end end end if (((931 + (4292 -(322 + 9)))>=(2011 + (4099 -3202))) and (v182==((548 -(104 + 443)) + 0))) then v185=785 -(7 + 778);for v369=v183,v94[1 + 3] do local v370=0;local v371;while true do if ((v370==(0 -0)) or ((5646 -((2474 -(492 + 1108)) + 27))==(4287 -2720))) then v371=158 -(6 + 71 + 81);while true do if (((1344 -(494 + 514))<(5780 -1408)) and (v371==(0 + 0))) then v185=v185 + (553 -(294 + 258));v92[v369]=v184[v185];break;end end break;end end end break;end end break;end end break;end end end elseif (((496 -231)==(130 + 135)) and (v95<=(20 -4))) then if (((1008 + 2558)==(9429 -(12929 -7066))) and (v95<=13)) then if (((912 + 1498)<=(9698 -6976)) and (v95<=11)) then local v131=0 -0;local v132;local v133;local v134;local v135;while true do if ((v131==1) or ((2654 -(540 + 3))<(2973 -2343))) then local v258=0;while true do if (((3157 -(321 + 876))<4673) and (v258==(0 -0))) then v69=(v134 + v132) -(1737 -((241 -110) + 1605));v135=0;v258=1402 -(587 + 814);end if (((758 + 810)<=(4414 -(589 + 239))) and (v258==(786 -(217 + 568)))) then v131=2;break;end end end if (((3323 + 1204)>=((3675 -(587 + 1252)) + (3042 -(869 + 47)))) and (v131==((3214 -1751) -(289 + 1174)))) then v132=v94[2];v133,v134=v89(v92[v132](v92[v132 + 1 + 0]));v131=609 -(440 + 168);end if (((8139 -3253)==(5195 -(198 + 111))) and (v131==(2 + 0))) then for v264=v132,v69 do local v265=0 -(0 -0);local v266;while true do if ((2356>=((19 -7) + 657)) and (v265==(1512 -((4438 -3347) + 421)))) then v266=0 -0;while true do if (((2855 -1804)>(949 -(416 + 471))) and (v266==(0 -0))) then v135=v135 + 1;v92[v264]=v133[v135];break;end end break;end end end break;end end elseif (((909 + 742)<=(9969 -5687)) and (v95>(5 + 7))) then v92[v94[2]]=v92[v94[3]];else local v188=0 -0;local v189;local v190;local v191;while true do if (((1154 -((2118 -(844 + 362)) + 147))<897) and (v188==((1570 -(29 + 467)) -(1041 + 31)))) then for v273=1,v94[(2384 -1579) -(298 + 503)] do local v274=432 -(207 + 225);local v275;while true do if ((v274==(3 -2)) or ((4331 -(231 + 306))<(4802 -(187 + 1111)))) then if ((v275[1]==(2000 -(499 + (5924 -4436)))) or ((1193 -212)<=(180 + 246))) then v191[v273-(1 -0)]={v92,v275[1269 -(222 + 1044)]};else v191[v273-(1 + 0)]={v33,v275[4 -1]};end v91[ #v91 + 1 + 0]=v191;break;end if (((9066 -6399)==(286 + 2381)) and ((0 + 0)==v274)) then local v328=0 -0;while true do if ((1493<(4906 -(1523 + 456))) and (1==v328)) then v274=4 -3;break;end if ((v328==(0 -0)) or ((4093 -(1192 + 220 + 334))==(3822 + 189 + 412))) then v68=v68 + 1;v275=v86[v68];v328=142 -(11 + 130);end end end end end v92[v94[2 -0]]=v29(v189,v190,v34);break;end if ((v188==1) or (950>=((2843 -1692) + 165))) then local v268=0 -0;while true do if ((v268==(0 + 0)) or (74==3554)) then v191={};v190=v9({},{__index=function(v329,v330)local v345=0 -0;local v346;local v347;while true do if ((v345==(3 -2)) or (2572>=4334)) then while true do if (((1825 -(156 + 52))<(1813 + 1292)) and (v346==0)) then local v411=0 -0;local v412;while true do if (((154 + 865)==1019) and (v411==0)) then v412=0 -0;while true do if ((v412==(0 + (0 -0))) or ((4143 -(3 + 58 + (2692 -2011)))==((6706 -(109 + 199)) -(353 + 1348)))) then local v442=0 -0;while true do if ((v442==(366 -(6 + 360))) or ((1470 + 479)<=((1055 -(4 + 7)) + 566 + 85))) then v347=v191[v330];return v347[2 -1][v347[2]];end end end end break;end end end end break;end if ((v345==(0 -(0 + 0))) or ((3587 -974)>(4861 -(528 + 91)))) then v346=0 -0;v347=nil;v345=997 -(246 + 750);end end end,__newindex=function(v331,v332,v333)local v348=1894 -(413 + 1481);local v349;local v350;local v351;while true do if ((3644>=(197 + 1265)) and (v348==1)) then v351=nil;while true do if (((1 + 0)==v349) or ((9060 -6277)>=(10479 -(6608 -(389 + 569))))) then while true do if ((v350==(0 + 0)) or ((5178 -1583)<(2898 -1202))) then v351=v191[v332];v351[1][v351[6 -4]]=v333;break;end end break;end if (((5522 -(8594 -5548))<=(12605 -7637)) and (v349==0)) then local v413=0 -0;while true do if ((1==v413) or ((1907 -(776 + 654))>(2889 + 42))) then v349=3 -2;break;end if (((2045 + 1796)>489) and (v413==(0 + 0))) then v350=0 -0;v351=nil;v413=(3 + 1) -3;end end end end break;end if (((363 + 442)<=4287) and (0==v348)) then v349=0;v350=nil;v348=1360 -(1355 + 4);end end end});v268=1959 -(1086 + 872);end if ((v268==1) or ((4280 -(640 + 400))<((2101 -(1400 + 357)) + 182))) then v188=2;break;end end end if ((3299>(4191 -(420 + 863))) and (v188==(869 -(89 + (1771 -991))))) then v189=v87[v94[3 + 0]];v190=nil;v188=1 + 0;end end end elseif ((v95<=14) or ((90 + 689 + 204)>((15015 -8825) -(1189 + 415)))) then local v136=0;local v137;local v138;while true do if ((v136==((2 + 1) -2)) or (2017<=1678)) then while true do if (((2093 -(136 + 29))>=(95 + 17)) and (v137==(0 -0))) then v138=v94[2];v92[v138]=v92[v138]();break;end end break;end if (((5172 -3388)==(3231 -(1360 + 87))) and (0==v136)) then local v260=0 + 0;while true do if ((v260==1) or (((10512 + 2356) -9580)<(13811 -10568))) then v136=1;break;end if ((v260==(0 + 0 + 0)) or (987>2233)) then v137=0 + 0;v138=nil;v260=1 + 0;end end end end elseif ((v95>(35 -20)) or (((37921 -23984) -10415)==(4564 -(1030 + 801)))) then do return;end else v92[v94[2 + 0]][v94[3]]=v94[6 -2];end elseif ((v95<=(16 + 3)) or ((73 + 1627)>(11257 -8390))) then if (((21 + 0 + 72)<(3467 -2225)) and (v95<=17)) then local v139=1481 -(60 + 1421);local v140;local v141;local v142;while true do if ((v139==((143 + 190) -(55 + 278))) or (4523<=986)) then v140=1277 -((1624 -(116 + 1122)) + 891);v141=nil;v139=1;end if ((891<=(5698 -3061)) and (v139==(254 -(20 + 17 + 216)))) then v142=nil;while true do if (((1 + 0 + 0)==v140) or (2897>(12971 -(9290 -(249 + 92))))) then for v299=v141 + 1,v69 do v7(v142,v92[v299]);end break;end if (((2115 -(285 + 136))<(4652 -2682)) and ((0 -0)==v140)) then local v278=1867 -(790 + 1077);while true do if ((v278==(0 -0)) or (((11018 -5902) -(1355 + 134))==(822 + 1834))) then v141=v94[8 -6];v142=v92[v141];v278=1;end if ((v278==(1 -0)) or ((5314 -(456 + 273))<(2788 -1521))) then v140=1;break;end end end end break;end end elseif (((1935 -882)<2831) and (v95==(28 -10))) then local v194=0;local v195;local v196;while true do if (((1439 -(120 + 365))>(2193 -(199 + 1752))) and ((1 + 0)==v194)) then while true do if (((1635 -930)==((431 + 2003) -(246 + 251 + 1232))) and (v195==(0 -(1020 -(288 + 732))))) then v196=v94[2];v92[v196](v92[v196 + 1 + 0]);break;end end break;end if ((0==v194) or ((26 -9)>=(3745 -(407 + 854)))) then v195=0 + 0;v196=nil;v194=1;end end else local v197=0 -0;local v198;local v199;while true do if ((2164>=1957) and (v197==(2 -1))) then while true do if ((v198==(0 -0)) or ((13861 -10000)<=1292)) then v199=v94[2 + 0];v92[v199]=v92[v199](v12(v92,v199 + ((1562 -(34 + 7)) -(142 + 1378)),v94[5 -2]));break;end end break;end if ((((7267 -5206) -(111 + 367 + 1253))<(1932 -(56 + 5 + 12))) and (v197==(242 -(223 + 11 + 8)))) then v198=0 + 0;v199=nil;v197=1 + 0;end end end elseif ((v95<=(1944 -(109 + 1285 + 530))) or ((4495 + 7)<485)) then local v143=0 -0;local v144;local v145;while true do if (((2919 -1857)==1062) and (v143==(0 + 0))) then v144=0 + 0;v145=nil;v143=1;end if (((2992 -(505 + 96))>198) and (v143==(1 + 0))) then while true do if ((((3963 -(56 + 262)) -(87 + 1703))<=(4084 + 164)) and (v144==(0 -0))) then v145=v94[1 + (867 -(242 + 624))];v92[v145]=v92[v145](v12(v92,v145 + (762 -(585 + 176)),v69));break;end end break;end end elseif (((396 + 1151)==(1842 -(65 + 230))) and (v95==(1829 -(75 + 1733)))) then v92[v94[1 + 1]]=v29(v87[v94[3]],nil,v34);else v92[v94[1 + 1]]=v92[v94[3]][v94[4]];end elseif ((v95<=(6 + 27)) or ((66 + (4008 -2432))==(2130 + 656))) then if ((v95<=(920 -(593 + 300))) or ((2409 + (3796 -2124))<(5115 -(784 + 1194)))) then if ((v95<=((286 + 427) -(653 + 36))) or (154>=988)) then if (((1734 + 6)<=((19898 -14019) -2099)) and (v95==((36 + 15) -(346 -(293 + 25))))) then v92[v94[2]]();else local v146=0 -0;local v147;local v148;local v149;while true do if (((5337 -(211 + 139))==((4247 -(118 + 1255)) + 2113)) and (v146==1)) then v149=nil;while true do if (((880 + 323)<(3003 + 295 + 382)) and (v147==1)) then v92[v148 + (1637 -(33 + 96 + 1507))]=v149;v92[v148]=v149[v94[(28 -15) -9]];break;end if ((720<=2470) and (v147==(1714 -(121 + 532 + 1061)))) then v148=v94[198 -(142 + 54)];v149=v92[v94[3 + 0]];v147=201 -(47 + 153);end end break;end if ((v146==(0 -0)) or ((2765 -(1119 + 414))<(1027 -(455 + 56)))) then v147=1551 -(1299 + 252);v148=nil;v146=1 + 0;end end end elseif (((2443 + 55)==2498) and (v95<=(4 + 21))) then v92[v94[2]]=v34[v94[4 -1]];elseif ((v95>(55 -29)) or (906==((2524 -1597) + 197))) then local v203=1624 -(1581 + 43);local v204;local v205;local v206;local v207;local v208;local v209;local v210;while true do if ((v203==(1 + 1)) or (4051<(532 + 663))) then v208=nil;v209=nil;v203=(3 + 2) -2;end if (((4246 -(224 + 426))>=(6089 -4175)) and (v203==(0 -0))) then v204=0 -0;v205=nil;v203=437 -((1131 -(210 + 536)) + 51);end if ((1==v203) or ((2544 -(633 + 691))<1075)) then v206=nil;v207=nil;v203=1 + 1;end if (((559 + 1107)<=3684) and (v203==3)) then v210=nil;while true do if ((v204==3) or ((4040 -2848)==(126 + 325))) then while true do if ((1242==(375 + 867)) and ((504 -(422 + 79))==v205)) then if (((1517 -737)<=2748) and v210) then local v389=1553 -(386 + 1167);local v390;while true do if ((v389==(0 + 0)) or ((2081 + 2082)>=4188)) then v390=0 + 0;while true do if ((3195==(5051 -(1318 + 538))) and (v390==(0 + 0))) then v92[v208]=v210;v68=v94[1283 -(1121 + 159)];break;end end break;end end else v68=v68 + ((3 -1) -(167 -(126 + 40)));end break;end if (((34 + 114)<(5321 -(732 + 235 + 601))) and (v205==(1739 -(1305 + 434)))) then local v355=420 -(68 + 352);while true do if (((1 -0)==v355) or ((2317 -(79 + 24))<=(376 + 1576))) then v205=1 -0;break;end if ((v355==0) or (3439<=(1355 + 583))) then v206=v94[7 -5];v207=v94[756 -(446 + (707 -(27 + 374)))];v355=1734 -(334 + 1399);end end end if ((v205==(1 + 0)) or ((2106 + 1923)<(7055 -4983))) then local v356=0 + 0;while true do if (((1182 -(121 + 1060))==v356) or ((158 + 141)<(627 -(161 + 193 + 13)))) then v205=2;break;end if ((v356==(0 + 0)) or ((40 + 51)>(4375 -2521))) then local v396=0;while true do if ((1822<(1258 + 617)) and (v396==(1 -0))) then v356=2 -1;break;end if ((312==((1097 -329) -456)) and (v396==0)) then v208=v206 + 2 + 0;v209={v92[v206](v92[v206 + (1981 -(82 + 1898))],v92[v208])};v396=2 -1;end end end end end if (((2207 -(206 + 153))<(1648 + 526)) and (v205==(1395 -(1051 + 342)))) then local v357=0;while true do if ((v357==(0 -0)) or ((1696 -(1081 -(137 + 373)))<=821)) then for v403=1 + 0,v207 do v92[v208 + v403]=v209[v403];end v210=v209[1 + 0];v357=982 -(918 + 63);end if (((492 + 15)<=(11040 -8253)) and (v357==((1 + 1) -(1611 -(358 + 1252))))) then v205=2 + 1;break;end end end end break;end if ((v204==(0 -0)) or ((3379 -995)<(209 + 191))) then local v316=0 + 0;while true do if (((3982 + 718 + 115)>=(4573 -(533 + 1247))) and (((1746 -(13 + 92)) -(91 + 1357 + 192))==v316)) then v204=3 -2;break;end if (((0 -0)==v316) or ((4586 -((3470 -2564) + 169))>4297)) then v205=267 -(110 + 157);v206=nil;v316=1 + 0;end end end if (((997 -435)<(6269 -2364)) and (v204==(637 -(599 + 36)))) then local v317=0;while true do if ((0==v317) or ((610 + 4)>=(2776 -(338 + 1156)))) then v209=nil;v210=nil;v317=1;end if (((2508 -(715 + 511))<=3609) and (v317==(1027 -(736 + 290)))) then v204=2 + 1;break;end end end if ((716>=(1312 -726)) and (v204==(2 -1))) then v207=nil;v208=nil;v204=1479 -(895 + 582);end end break;end end else local v211=881 -(155 + 726);local v212;local v213;local v214;local v215;while true do if ((3156>(4372 -2951)) and (v211==((1786 -(220 + 382)) -(612 + 572)))) then local v270=0;while true do if ((((1630 -(151 + 26)) -1014)<=(244 + 608)) and (v270==1)) then v211=643 -(567 + 75);break;end if ((((11232 -3543) -5014)>(9068 -7139)) and ((0 -0)==v270)) then v212=0 + 0;v213=nil;v270=1 + 0 + 0;end end end if (((5068 -(403 + 10))==(313 + 4342)) and (v211==(1 + 0 + 0))) then v214=nil;v215=nil;v211=2;end if ((v211==(1 + 1)) or (4878<=3246)) then while true do if ((v212==((689 + 682) -(881 + 490))) or ((334 + 1363)==(1424 + 666))) then local v318=0 -0;while true do if (((7726 -2973)<=(1710 + 3254)) and (v318==1)) then v212=1 -0;break;end if (((0 -0)==v318) or ((2272 + 340)>=(18440 -13965))) then local v358=0 + 0;while true do if (((4439 -1166)==(3354 -(67 + 14))) and (v358==(525 -(130 + 395)))) then v213=v94[2 -0];v214={v92[v213](v12(v92,v213 + 1,v69))};v358=1 -0;end if (((1 + 0)==v358) or (3062<=(1714 + 469))) then v318=45 -(29 + (882 -(742 + 125)));break;end end end end end if ((1423==((2386 -(480 + 152)) -(7 + 324))) and (v212==(2 -1))) then v215=0 + 0;for v336=v213,v94[189 -(172 + 13)] do local v337=0 + 0;local v338;local v339;while true do if ((v337==(3 -2)) or (4173<=(6108 -4758))) then while true do if (((2106 + 2212)>3804) and (v338==(0 -0))) then v339=0 -(0 + 0);while true do if (((477 + 698)==1175) and (v339==(1432 -(314 + 1118)))) then v215=v215 + (62 -(57 + 4));v92[v336]=v214[v215];break;end end break;end end break;end if ((v337==0) or ((11026 -8058)<=1124)) then v338=0;v339=nil;v337=1;end end end break;end end break;end end end elseif ((((20598 -10845) -6586)>=(2010 -(29 + 1211))) and (v95<=((397 -(41 + 252)) -74))) then if ((v95<=(36 -8)) or ((3335 -(1545 + 88))>=(13812 -10314))) then if (v92[v94[1 + 1]] or ((4774 -(236 + 141))<=1625)) then v68=v68 + 1 + 0;else v68=v94[1688 -(612 + 1073)];end elseif (((850 + 1472)>=(415 + 1712)) and (v95==((1891 -(677 + 1195)) + 10))) then v92[v94[1 + 1]]=v33[v94[3]];else v92[v94[3 -1]]={};end elseif ((v95<=(14 + (33 -16))) or (1406>=(2110 + 2543))) then v33[v94[3]]=v92[v94[2]];elseif ((v95==(134 -(865 -(585 + 178)))) or ((18785 -13835)<=(1462 + 2742))) then local v220=0 -0;local v221;local v222;local v223;local v224;local v225;local v226;while true do if (((5315 -(950 + 25))>=548) and (v220==(130 -(70 + 60)))) then v221=1190 -(296 + 894);v222=nil;v220=1695 -(279 + 76 + 1339);end if ((v220==(1 + 0)) or ((647 + 122)<=623)) then v223=nil;v224=nil;v220=(161 -80) -(41 + 38);end if (((1257 + 1689)>=(4992 -3411)) and (v220==(3 + 0))) then while true do if (((2601 -(544 + 1088))<4286) and (v221==(1 + 0))) then v224=nil;v225=nil;v221=1 + 1;end if (((29 + 1842 + 1236)==((13559 -5519) -4933)) and (v221==2)) then v226=nil;while true do if (((5926 -(231 + (3083 -1563)))>=(1762 -(19 + 9))) and ((0 -0)==v222)) then local v359=0 -0;while true do if ((v359==(1 -0)) or ((2362 -(377 + 993))<(2601 -1819))) then v222=(239 + 876) -(792 + 322);break;end if (((55 + 2210)<=3552) and (v359==(0 + 0))) then local v399=0 + 0;while true do if ((v399==(1339 -(426 + 912))) or ((1689 + 775)>(4667 -(27 + 361)))) then v359=1 + 0;break;end if ((3231>=(1123 -(189 + 289))) and (v399==0)) then v223=v94[1 + 1];v224,v225=v89(v92[v223](v12(v92,v223 + 1,v69)));v399=193 -(86 + 106);end end end end end if ((((10706 -(100 + 523)) -5588)>=(2675 -(780 + 125))) and ((4 -2)==v222)) then for v373=v223,v69 do local v374=0 -0;while true do if ((v374==(0 + 0)) or (((2469 + 720) -(562 + 146))>(4702 -1936))) then v226=v226 + 1;v92[v373]=v224[v226];break;end end end break;end if (((156 -(62 + (219 -126)))==v222) or (2138<=(2124 -1585))) then local v360=0 -0;while true do if ((2559>=(1067 + 448)) and (v360==(2 -1))) then v222=(245 + 453) -(593 + 103);break;end if ((v360==0) or (((6186 -2474) + (1831 -(1402 + 47)))<(2 + 23))) then local v400=1582 -(181 + 1401);while true do if (((89 + 2376)<=(6183 -(873 + 680))) and (v400==(376 -(32 + 343)))) then v360=1479 -(1004 + 474);break;end if ((((2014 + 3230) -1799)<(979 + 3249)) and ((0 + 0)==v400)) then v69=(v225 + v223) -1;v226=(0 + 0) -0;v400=(1949 -(1806 + 142)) + 0;end end end end end end break;end if ((1565<=(6771 -4040)) and (v221==(0 + 0))) then v222=0;v223=nil;v221=3 -2;end end break;end if (((1690 + 162)==(1793 + 59)) and (2==v220)) then v225=nil;v226=nil;v220=2 + 1 + 0;end end else for v261=v94[(420 -(278 + 136)) -4],v94[3] do v92[v261]=nil;end end elseif (((155 + 763)<=3606) and (v95<=39)) then if ((v95<=(30 + 6)) or (((4519 -2708) -(4652 -3643))<(22 + 15))) then if (((4216 -(3039 -(219 + 289)))<3320) and (v95<=(396 -(71 + 291)))) then v68=v94[2 + 1];elseif ((v95>(1576 -(1345 + 196))) or (522>=(14728 -10517))) then v92[v94[2]]=v94[324 -(247 + 74)]~=(1170 -(142 + 1028));else v92[v94[2 + 0]]= #v92[v94[7 -4]];end elseif (((2179 -935)<(6040 -(1618 + 2898))) and (v95<=37)) then local v155=381 -(299 + 62 + 20);local v156;local v157;local v158;local v159;local v160;while true do if (((2009 + 751)==(4229 -1469)) and (v155==(0 + 0))) then v156=0 -0;v157=nil;v155=1 -0;end if (((2845 -(339 + 1089))==(301 + 1116)) and (v155==(5 -3))) then v160=nil;while true do if (((128 -72)<251) and (v156==(1 + 1))) then for v300=v157,v69 do local v301=0;local v302;while true do if (((2181 -(347 + 1377))<=(1777 -1132)) and (v301==(1745 -(1537 + 208)))) then v302=0 + 0;while true do if ((((2863 -(974 + 736)) + 2357)>=(377 + 555)) and (v302==0)) then v160=v160 + 1 + 0;v92[v300]=v158[v160];break;end end break;end end end break;end if ((1841>=(399 + (753 -582))) and (v156==0)) then local v286=0 + 0 + 0;local v287;while true do if ((v286==(410 -(90 + (1235 -915)))) or ((9987 -5760)<419)) then v287=0;while true do if ((v287==1) or ((9140 -5949)==277)) then v156=3 -2;break;end if (((420 + 36)==(803 -(320 + (98 -71)))) and ((0 + 0 + 0)==v287)) then local v375=(2549 -1428) -(643 + 478);while true do if (((5577 -3857)<=(2855 + 128)) and (v375==1)) then v287=1;break;end if ((0==v375) or (((10010 -(338 + 640)) -5513)>(3114 + 594))) then v157=v94[2 + 0];v158,v159=v89(v92[v157](v12(v92,v157 + (1 -0),v94[12 -9])));v375=1584 -(1526 + 57);end end end end break;end end end if (((1073 -410)==(2411 -(1343 + 405))) and (v156==(2 -1))) then local v288=0 + 0;local v289;while true do if ((0==v288) or (3998<((12893 -(110 + 1106)) -8985))) then v289=0 -0;while true do if ((v289==(1 + 0)) or (3299>=4994)) then v156=1 + 1;break;end if (((384 + 1273)==(984 + 673)) and (v289==0)) then local v376=0 -0;while true do if ((2769==(3406 -(628 + 9))) and (0==v376)) then v69=(v159 + v157) -(3 -(1 + 1));v160=1126 -(868 + 258);v376=4 -3;end if ((1==v376) or ((371 -(43 + 279))==(5601 -(283 + 567)))) then v289=(1608 -(822 + 785)) + 0;break;end end end end break;end end end end break;end if ((v155==(1831 -(579 + 1251))) or ((7650 -3681)<=(2517 + 489))) then v158=nil;v159=nil;v155=4 -2;end end elseif ((3741<=3764) and (v95>(876 -(579 + 259)))) then v92[v94[1 + 1]]=v94[5 -2];else local v231=0 -0;local v232;local v233;local v234;local v235;while true do if (((851 -306)<(9695 -5944)) and ((9 -(122 -(105 + 10)))==v231)) then while true do if ((2739>=817) and ((788 -(579 + 92 + 117))==v232)) then local v319=0 -(0 -0);while true do if ((v319==1) or (4277<=(509 + 2946))) then v232=106 -(94 + 11);break;end if ((v319==0) or ((435 + 254)==(4712 -(105 + 1080)))) then v233=v94[2 -0];v234=v92[v233];v319=1559 -(756 + 802);end end end if (((2843 -2060)<=2309) and (v232==(1 + 0))) then v235=v92[v233 + 2];if (((951 -(63 + 498))==(163 + 227)) and (v235>(0 -0))) then if ((1384<4976) and (v234>v92[v233 + 1 + 0 + 0])) then v68=v94[7 -4];else v92[v233 + 3]=v234;end elseif (((5613 -2021)>(2195 -(138 + 63 + 234))) and (v234<v92[v233 + 1])) then v68=v94[7 -4];else v92[v233 + (1484 -((740 -487) + 1228))]=v234;end break;end end break;end if (((5429 -3193)<=(6307 -2286)) and (v231==1)) then v234=nil;v235=nil;v231=5 -3;end if ((v231==(883 -(632 + 251))) or (((3548 -1922) + 796)==((1988 -(186 + 1261)) + 2166))) then v232=0;v233=nil;v231=2 -(1 + 0);end end end elseif (((3150 -(1502 + 133))>=(975 -(128 + 230))) and (v95<=(2 + 40))) then if ((v95<=40) or ((13 + 50)==(496 -(149 + 40)))) then local v161=0 -0;local v162;local v163;while true do if (((1 + (1582 -(956 + 626)))==v161) or (3257<(20 + 6 + 84))) then while true do if ((4130>=905) and (v162==0)) then v163=v94[2];do return v92[v163](v12(v92,v163 + 1 + 0,v69));end break;end end break;end if ((v161==(0 + 0)) or ((18829 -13932)<(4227 -2638))) then v162=636 -(247 + 389);v163=nil;v161=1 + 0;end end elseif ((v95==(32 + 9)) or ((15514 -11322)<(349 + 119))) then local v236=0 + 0;local v237;local v238;local v239;while true do if ((v236==(687 -(563 + 124))) or ((5297 -1297)<(1271 + (6616 -4891)))) then v237=1425 -(945 + 480);v238=nil;v236=1 -0;end if ((v236==1) or ((5307 -(912 + 334))<(3361 -(141 + 860)))) then v239=nil;while true do if ((v237==(0 + 0)) or ((1466 + 1201)==(11423 -9103))) then local v321=0 + 0;while true do if ((v321==(580 -(363 + 217))) or (15==(68 + 4 + 52))) then v238=0;v239=nil;v321=1 + 0 + 0;end if ((v321==1) or ((9185 -(1607 + 3256))<=(10432 -7169))) then v237=1 + 0;break;end end end if ((v237==(1 + 0)) or ((3306 -((936 -(74 + 213)) + 1015))==(1726 -790))) then while true do if (((0 + 0)==v238) or ((331 + 2983)>(4725 -(602 + 680)))) then v239=v94[1 + 1];v92[v239](v12(v92,v239 + (2 -1),v69));break;end end break;end end break;end end else local v240=0 + 0 + 0;local v241;local v242;local v243;local v244;while true do if ((2==v240) or ((3801 -1409)>=(5813 -(29 + 1013)))) then while true do if (((207 + 115)<=(1165 + 3369)) and (v241==0)) then v242=v94[4 -(3 -1)];v243=v92[v242 + (1082 -(760 + 320))];v241=(430 -(263 + 166)) -0;end if (((1377 -(1068 + 307))==v241) or (2830>=(8437 -4057))) then if (((1964 -(68 + 6))>=((1762 + 1238) -1728)) and (v243>0)) then if ((v244<=v92[v242 + 1]) or ((6742 -2793)<=(8626 -6876))) then local v381=0;local v382;while true do if ((((1019 -(465 + 18)) + 639)>=(1114 -670)) and (0==v381)) then v382=0 + 0;while true do if ((v382==((471 -264) -(152 + (847 -(174 + 618))))) or ((4367 -2818)>(11146 -7074))) then v68=v94[3];v92[v242 + (10 -7)]=v244;break;end end break;end end end elseif (((3460 -2206)<(1528 + 979)) and (v244>=v92[v242 + (2 -1)])) then local v383=583 -(143 + 440);while true do if (((4679 -1178)>(2656 + 630)) and (v383==(0 -0))) then v68=v94[2 + 1];v92[v242 + (1817 -(641 + 1173))]=v244;break;end end end break;end if (((1899 + 1913)>(4410 -(544 + 894))) and (v241==((1 + 1) -1))) then local v324=1642 -(157 + 1485);while true do if (((434 + 1295)==(3095 -1366)) and (v324==0)) then v244=v92[v242] + v243;v92[v242]=v244;v324=1;end if (((4358 -(212 + 138))==(183 + 3825)) and (v324==(1 -0))) then v241=1637 -(1355 + 280);break;end end end end break;end if ((v240==(2 -(2 -1))) or (3435<1446)) then v243=nil;v244=nil;v240=733 -(400 + 331);end if (((6176 -4006)==(2500 -(68 + (1095 -(571 + 262))))) and ((0 -0)==v240)) then v241=0;v242=nil;v240=1 + 0;end end end elseif (((577 + 1107)>=(4083 -3008)) and (v95<=(145 -102))) then local v164=0;local v165;local v166;local v167;while true do if ((((6349 -2064) -1115)<=4047) and (v164==1)) then v167=nil;while true do if ((v165==(0 -0)) or ((5101 -(166 + 144 + 63))>(724 + 4202))) then local v291=0 -0;while true do if (((3210 + 784)==(3092 + 902)) and ((1 + 0)==v291)) then v165=1566 -(1360 + 205);break;end if (((2043 -(1260 + (772 -424)))<(12931 -8346)) and (v291==(1472 -(1233 + 239)))) then v166=v94[2 -0];v167={};v291=1 + 0;end end end if ((v165==1) or (1024>=(4161 -(32 + 158)))) then for v303=1, #v91 do local v304=506 -(236 + 270);local v305;local v306;local v307;while true do if (((3057 -1663)<=(5983 -(678 + 459))) and (v304==(3 -2))) then v307=nil;while true do if (((9188 -(6320 -(567 + 73)))>=1451) and (v305==(1606 -(1449 + 157)))) then v306=1086 -(639 + 447);v307=nil;v305=1 + 0;end if ((v305==1) or ((12051 -7629)<=((12634 -6806) -(1852 + 137)))) then while true do if (((2207 -(687 + 1292))<=2467) and (v306==(0 -0))) then v307=v91[v303];for v416=1484 -(544 + 940), #v307 do local v417=(1837 -(652 + 657)) -(251 + 277);local v418;local v419;local v420;while true do if ((v417==1) or ((11007 -7078)==(5569 -(3114 -1719)))) then v420=v418[1 + 1];if (((v419==v92) and (v420>=v166)) or ((305 + 3010)<=2971)) then local v443=1593 -(264 + 1329);local v444;local v445;while true do if (((2382 -(508 + 435 + 121))==(11 + 159 + 1148)) and (v443==(3 -2))) then while true do if ((v444==(0 + 0)) or ((3024 + (859 -530))<=(3048 -(1824 + 47)))) then v445=(0 + 0) -0;while true do if ((v445==((0 -0) -0)) or ((5908 -(624 + 524))<(1113 -(17 + 69)))) then v167[v420]=v419[v420];v418[1]=v167;break;end end break;end end break;end if ((v443==(0 + (1336 -(1002 + 334)))) or ((7387 -3612)==(137 + 23))) then v444=0 + 0;v445=nil;v443=1 + 0;end end end break;end if ((v417==(0 -0)) or (1775>=((13313 -(170 + 1331)) -7825))) then v418=v307[v416];v419=v418[1 + 0];v417=1785 -(1015 + 591 + 178);end end end break;end end break;end end break;end if ((v304==(0 -0)) or ((98 + 437)>=(4774 -3757))) then v305=0;v306=nil;v304=1 + 0;end end end break;end end break;end if ((v164==((0 + 0) -0)) or (3821>=((5068 -(138 + 284)) -(58 + 161)))) then v165=0 -0;v166=nil;v164=1 -(1493 -(420 + 1073));end end elseif ((464<=(13549 -10684)) and (v95==(1125 -(408 + 673)))) then v92[v94[7 -(125 -(7 + 113))]]=v92[v94[7 -4]][v92[v94[4]]];else local v247=0 -0;local v248;local v249;local v250;while true do if ((4847<=4973) and (v247==0)) then v248=1004 -(97 + 520 + 387);v249=nil;v247=1045 -(189 + 855);end if (((2 -1)==v247) or (3587>=(1628 + 2342))) then v250=nil;while true do if ((v248==(1 -0)) or (1946>=(1274 + 1033))) then while true do if (((3135 + 1526)>=(2455 + 578)) and (v249==((2164 -927) -((1879 -(922 + 677)) + 957)))) then v250=v94[1 + 1];do return v12(v92,v250,v69);end break;end end break;end if (((675 + 418)>(1819 -1169)) and (v248==((1638 -(1060 + 578)) + 0))) then v249=(0 + 0) -0;v250=nil;v248=1;end end break;end end end v68=v68 + 1 + 0 + 0;break;end if (((6777 -3488)<(7613 -4145)) and (v98==(0 -0))) then local v111=0 + 0;while true do if ((v111==(734 -(11 + (2539 -1816)))) or ((13105 -9242)<=(1603 + 433))) then v94=v86[v68];v95=v94[94 -(89 + 4)];v111=111 -(60 + 50);end if (((2258 -(1400 + 588))<(3905 -(393 + 317))) and (v111==(1 -0))) then v98=1 + 0 + 0;break;end end end end break;end end end end;v67=3;end end end;end;return v29(v28(),{},v16)(...);end if (1==v17) then v20=nil;v20=function(v35,v36,v37)if v37 then local v73=(v35/((4 -2)^(v36-1)))%((1512 -(373 + 167 + 879 + 91))^(((v37-(1 + 0)) -(v36-(2 -1))) + (1 -0)));return v73-(v73%(1156 -(1021 + 134)));else local v74=0 -0;local v75;while true do if (v74==(0 -0)) then v75=2^(v36-1);return (((v35%(v75 + v75))>=v75) and (932 -(682 + 249))) or (922 -(176 + 242 + 504));end end end end;v21=nil;v17=2;end if (5==v17) then v26=v23;v27=nil;v27=function(...)return {...},v11("#",...);end;v17=6;end end end vv8(),...);end
